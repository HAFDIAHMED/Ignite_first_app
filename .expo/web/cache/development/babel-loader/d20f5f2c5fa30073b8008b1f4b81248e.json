{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _core = require(\"@unimodules/core\");\n\nvar rtlDetect = _interopRequireWildcard(require(\"rtl-detect\"));\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar _default = {\n  get currency() {\n    return null;\n  },\n\n  get decimalSeparator() {\n    return 1.1.toLocaleString().substring(1, 2);\n  },\n\n  get digitGroupingSeparator() {\n    var value = 1000 .toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n\n  get isRTL() {\n    var _rtlDetect$isRtlLang;\n\n    return (_rtlDetect$isRtlLang = rtlDetect.isRtlLang(this.locale)) != null ? _rtlDetect$isRtlLang : false;\n  },\n\n  get isMetric() {\n    var region = this.region;\n\n    switch (region) {\n      case 'US':\n      case 'LR':\n      case 'MM':\n        return false;\n    }\n\n    return true;\n  },\n\n  get locale() {\n    if (!_core.Platform.isDOMAvailable) {\n      return '';\n    }\n\n    var locale = navigator.language || navigator['systemLanguage'] || navigator['browserLanguage'] || navigator['userLanguage'] || this.locales[0];\n    return locale;\n  },\n\n  get locales() {\n    if (!_core.Platform.isDOMAvailable) {\n      return [];\n    }\n\n    var _navigator = navigator,\n        _navigator$languages = _navigator.languages,\n        languages = _navigator$languages === void 0 ? [] : _navigator$languages;\n    return Array.from(languages);\n  },\n\n  get timezone() {\n    var defaultTimeZone = 'Etc/UTC';\n\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n\n  get isoCurrencyCodes() {\n    return [];\n  },\n\n  get region() {\n    var locale = this.locale;\n\n    var _ref = typeof locale === 'string' ? locale.split('-') : [],\n        _ref2 = (0, _toArray2.default)(_ref),\n        suffixes = _ref2.slice(1);\n\n    for (var _iterator = _createForOfIteratorHelperLoose(suffixes), _step; !(_step = _iterator()).done;) {\n      var suffix = _step.value;\n\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n\n    return null;\n  },\n\n  getLocalizationAsync: function getLocalizationAsync() {\n    var currency, decimalSeparator, digitGroupingSeparator, isoCurrencyCodes, isMetric, isRTL, locale, locales, region, timezone;\n    return _regenerator.default.async(function getLocalizationAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            currency = this.currency, decimalSeparator = this.decimalSeparator, digitGroupingSeparator = this.digitGroupingSeparator, isoCurrencyCodes = this.isoCurrencyCodes, isMetric = this.isMetric, isRTL = this.isRTL, locale = this.locale, locales = this.locales, region = this.region, timezone = this.timezone;\n            return _context.abrupt(\"return\", {\n              currency: currency,\n              decimalSeparator: decimalSeparator,\n              digitGroupingSeparator: digitGroupingSeparator,\n              isoCurrencyCodes: isoCurrencyCodes,\n              isMetric: isMetric,\n              isRTL: isRTL,\n              locale: locale,\n              locales: locales,\n              region: region,\n              timezone: timezone\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this, null, Promise);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["../src/ExpoLocalization.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport { Platform } from '@unimodules/core';\nimport * as rtlDetect from 'rtl-detect';\n\nimport { Localization } from './Localization.types';\n\nexport default {\n  get currency(): string | null {\n    // TODO: Add support\n    return null;\n  },\n  get decimalSeparator(): string {\n    return (1.1).toLocaleString().substring(1, 2);\n  },\n  get digitGroupingSeparator(): string {\n    const value = (1000).toLocaleString();\n    return value.length === 5 ? value.substring(1, 2) : '';\n  },\n  get isRTL(): boolean {\n    return rtlDetect.isRtlLang(this.locale) ?? false;\n  },\n  get isMetric(): boolean {\n    const { region } = this;\n    switch (region) {\n      case 'US': // USA\n      case 'LR': // Liberia\n      case 'MM': // Myanmar\n        return false;\n    }\n    return true;\n  },\n  get locale(): string {\n    if (!Platform.isDOMAvailable) {\n      return '';\n    }\n    const locale =\n      navigator.language ||\n      navigator['systemLanguage'] ||\n      navigator['browserLanguage'] ||\n      navigator['userLanguage'] ||\n      this.locales[0];\n    return locale;\n  },\n  get locales(): string[] {\n    if (!Platform.isDOMAvailable) {\n      return [];\n    }\n    const { languages = [] } = navigator;\n    return Array.from(languages);\n  },\n  get timezone(): string {\n    const defaultTimeZone = 'Etc/UTC';\n    if (typeof Intl === 'undefined') {\n      return defaultTimeZone;\n    }\n    return Intl.DateTimeFormat().resolvedOptions().timeZone || defaultTimeZone;\n  },\n  get isoCurrencyCodes(): string[] {\n    // TODO(Bacon): Add this - very low priority\n    return [];\n  },\n  get region(): string | null {\n    // There is no way to obtain the current region, as is possible on native.\n    // Instead, use the country-code from the locale when possible (e.g. \"en-US\").\n    const { locale } = this;\n    const [, ...suffixes] = typeof locale === 'string' ? locale.split('-') : [];\n    for (const suffix of suffixes) {\n      if (suffix.length === 2) {\n        return suffix.toUpperCase();\n      }\n    }\n    return null;\n  },\n  async getLocalizationAsync(): Promise<Localization> {\n    const {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    } = this;\n    return {\n      currency,\n      decimalSeparator,\n      digitGroupingSeparator,\n      isoCurrencyCodes,\n      isMetric,\n      isRTL,\n      locale,\n      locales,\n      region,\n      timezone,\n    };\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}
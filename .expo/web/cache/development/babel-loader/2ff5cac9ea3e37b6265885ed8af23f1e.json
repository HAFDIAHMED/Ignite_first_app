{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  enableScreens: true,\n  screensEnabled: true,\n  NativeScreen: true,\n  Screen: true,\n  ScreenContainer: true,\n  NativeScreenContainer: true,\n  ScreenStack: true,\n  ScreenStackHeaderBackButtonImage: true,\n  ScreenStackHeaderRightView: true,\n  ScreenStackHeaderLeftView: true,\n  ScreenStackHeaderCenterView: true,\n  ScreenStackHeaderSearchBarView: true,\n  ScreenStackHeaderConfig: true,\n  SearchBar: true,\n  ScreenStackHeaderSubview: true,\n  shouldUseActivityState: true\n};\nexports.SearchBar = exports.ScreenStackHeaderSubview = exports.ScreenStackHeaderSearchBarView = exports.ScreenStackHeaderRightView = exports.ScreenStackHeaderLeftView = exports.ScreenStackHeaderConfig = exports.ScreenStackHeaderCenterView = exports.ScreenStackHeaderBackButtonImage = exports.ScreenStack = exports.ScreenContainer = exports.Screen = exports.NativeScreenContainer = exports.NativeScreen = void 0;\nexports.enableScreens = enableScreens;\nexports.screensEnabled = screensEnabled;\nexports.shouldUseActivityState = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _types = require(\"./types\");\n\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});\nvar _excluded = [\"active\", \"activityState\", \"style\", \"enabled\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar ENABLE_SCREENS = true;\n\nfunction enableScreens() {\n  var shouldEnableScreens = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nfunction screensEnabled() {\n  return ENABLE_SCREENS;\n}\n\nvar NativeScreen = function (_React$Component) {\n  (0, _inherits2.default)(NativeScreen, _React$Component);\n\n  var _super = _createSuper(NativeScreen);\n\n  function NativeScreen() {\n    (0, _classCallCheck2.default)(this, NativeScreen);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(NativeScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          active = _this$props.active,\n          activityState = _this$props.activityState,\n          style = _this$props.style,\n          _this$props$enabled = _this$props.enabled,\n          enabled = _this$props$enabled === void 0 ? ENABLE_SCREENS : _this$props$enabled,\n          rest = (0, _objectWithoutProperties2.default)(_this$props, _excluded);\n\n      if (enabled) {\n        if (active !== undefined && activityState === undefined) {\n          activityState = active !== 0 ? 2 : 0;\n        }\n\n        return _react.default.createElement(_reactNative.View, _extends({\n          hidden: activityState === 0,\n          style: [style, {\n            display: activityState !== 0 ? 'flex' : 'none'\n          }]\n        }, rest));\n      }\n\n      return _react.default.createElement(_reactNative.View, rest);\n    }\n  }]);\n  return NativeScreen;\n}(_react.default.Component);\n\nexports.NativeScreen = NativeScreen;\n\nvar Screen = _reactNative.Animated.createAnimatedComponent(NativeScreen);\n\nexports.Screen = Screen;\nvar ScreenContainer = _reactNative.View;\nexports.ScreenContainer = ScreenContainer;\nvar NativeScreenContainer = _reactNative.View;\nexports.NativeScreenContainer = NativeScreenContainer;\nvar ScreenStack = _reactNative.View;\nexports.ScreenStack = ScreenStack;\n\nvar ScreenStackHeaderBackButtonImage = function ScreenStackHeaderBackButtonImage(props) {\n  return _react.default.createElement(_reactNative.View, null, _react.default.createElement(_reactNative.Image, _extends({\n    resizeMode: \"center\",\n    fadeDuration: 0\n  }, props)));\n};\n\nexports.ScreenStackHeaderBackButtonImage = ScreenStackHeaderBackButtonImage;\n\nvar ScreenStackHeaderRightView = function ScreenStackHeaderRightView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\n\nexports.ScreenStackHeaderRightView = ScreenStackHeaderRightView;\n\nvar ScreenStackHeaderLeftView = function ScreenStackHeaderLeftView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\n\nexports.ScreenStackHeaderLeftView = ScreenStackHeaderLeftView;\n\nvar ScreenStackHeaderCenterView = function ScreenStackHeaderCenterView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\n\nexports.ScreenStackHeaderCenterView = ScreenStackHeaderCenterView;\n\nvar ScreenStackHeaderSearchBarView = function ScreenStackHeaderSearchBarView(props) {\n  return _react.default.createElement(_reactNative.View, props);\n};\n\nexports.ScreenStackHeaderSearchBarView = ScreenStackHeaderSearchBarView;\nvar ScreenStackHeaderConfig = _reactNative.View;\nexports.ScreenStackHeaderConfig = ScreenStackHeaderConfig;\nvar SearchBar = _reactNative.View;\nexports.SearchBar = SearchBar;\nvar ScreenStackHeaderSubview = _reactNative.View;\nexports.ScreenStackHeaderSubview = ScreenStackHeaderSubview;\nvar shouldUseActivityState = true;\nexports.shouldUseActivityState = shouldUseActivityState;","map":{"version":3,"sources":["index.tsx"],"names":["ENABLE_SCREENS","shouldEnableScreens","React","render","enabled","rest","active","activityState","display","Screen","Animated","ScreenContainer","NativeScreenContainer","ScreenStack","ScreenStackHeaderBackButtonImage","props","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","SearchBar","ScreenStackHeaderSubview","shouldUseActivityState"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAUA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAIA,cAAc,GAAlB,IAAA;;AAEO,SAAA,aAAA,GAAyD;AAAA,MAAlCC,mBAAkC,uEAAzD,IAAyD;AAC9DD,EAAAA,cAAc,GAAdA,mBAAAA;AACD;;AAEM,SAAA,cAAA,GAAmC;AACxC,SAAA,cAAA;AACD;;IAEM,Y;;;;;;;;;;;;WACLG,kBAAsB;AACpB,wBAMI,KANJ,KAAA;AAAA,UAAI,MAAJ,eAAI,MAAJ;AAAA,UAAI,aAAJ,eAAI,aAAJ;AAAA,UAAI,KAAJ,eAAI,KAAJ;AAAA,4CAIEC,OAJF;AAAA,UAIEA,OAJF,oCAAI,cAAJ;AAAA,UAKKC,IALL;;AAQA,UAAA,OAAA,EAAa;AACX,YAAIC,MAAM,KAANA,SAAAA,IAAwBC,aAAa,KAAzC,SAAA,EAAyD;AACvDA,UAAAA,aAAa,GAAGD,MAAM,KAANA,CAAAA,GAAAA,CAAAA,GADuC,CACvDC;AACD;;AACD,eACE,eAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA;AAEE,UAAA,MAAM,EAAEA,aAAa,KAFvB,CAAA;AAGE,UAAA,KAAK,EAAE,CAAA,KAAA,EAAQ;AAAEC,YAAAA,OAAO,EAAED,aAAa,KAAbA,CAAAA,GAAAA,MAAAA,GAA+B;AAA1C,WAAR;AAHT,SAAA,EADF,IACE,CAAA,CADF;AAQD;;AAED,aAAO,eAAA,aAAA,CAAA,iBAAA,EAAP,IAAO,CAAP;AACD;;;EAzB+BL,eAA3B,S;;;;AA4BA,IAAMO,MAAM,GAAGC,sBAAAA,uBAAAA,CAAf,YAAeA,CAAf;;;AAEA,IAAMC,eAA0D,GAAhE,iBAAA;;AAEA,IAAMC,qBAAgE,GAAtE,iBAAA;;AAEA,IAAMC,WAAkD,GAAxD,iBAAA;;;AAEA,IAAMC,gCAAgC,GAC3CC,SADWD,gCACXC,CAAAA,KAD8C;AAAA,SAG9C,eAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,EACE,eAAA,aAAA,CAAA,kBAAA,EAAA,QAAA,CAAA;AAAO,IAAA,UAAU,EAAjB,QAAA;AAA2B,IAAA,YAAY,EAAE;AAAzC,GAAA,EAJG,KAIH,CAAA,CADF,CAH8C;AAAA,CAAzC;;;;AAQA,IAAMC,0BAA0B,GACrCD,SADWC,0BACXD,CAAAA,KADwC;AAAA,SAExB,eAAA,aAAA,CAAA,iBAAA,EAFX,KAEW,CAFwB;AAAA,CAAnC;;;;AAIA,IAAME,yBAAyB,GACpCF,SADWE,yBACXF,CAAAA,KADuC;AAAA,SAEvB,eAAA,aAAA,CAAA,iBAAA,EAFX,KAEW,CAFuB;AAAA,CAAlC;;;;AAIA,IAAMG,2BAA2B,GACtCH,SADWG,2BACXH,CAAAA,KADyC;AAAA,SAEzB,eAAA,aAAA,CAAA,iBAAA,EAFX,KAEW,CAFyB;AAAA,CAApC;;;;AAIA,IAAMI,8BAA8B,GACzCJ,SADWI,8BACXJ,CAAAA,KAD4C;AAAA,SAE5B,eAAA,aAAA,CAAA,iBAAA,EAFX,KAEW,CAF4B;AAAA,CAAvC;;;AAIA,IAAMK,uBAA0E,GAAhF,iBAAA;;AAGA,IAAMC,SAA8C,GAApD,iBAAA;;AAEA,IAAMC,wBAEX,GAFK,iBAAA;;AAIA,IAAMC,sBAAsB,GAA5B,IAAA","sourcesContent":["import React from 'react';\nimport { Animated, View, ViewProps, ImageProps, Image } from 'react-native';\nimport {\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  HeaderSubviewTypes,\n  SearchBarProps,\n} from './types';\n\nexport * from './types';\n\nlet ENABLE_SCREENS = true;\n\nexport function enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = shouldEnableScreens;\n}\n\nexport function screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\nexport class NativeScreen extends React.Component<ScreenProps> {\n  render(): JSX.Element {\n    let {\n      active,\n      activityState,\n      style,\n      enabled = ENABLE_SCREENS,\n      ...rest\n    } = this.props;\n\n    if (enabled) {\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0; // change taken from index.native.tsx\n      }\n      return (\n        <View\n          // @ts-expect-error: hidden exists on web, but not in React Native\n          hidden={activityState === 0}\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          {...rest}\n        />\n      );\n    }\n\n    return <View {...rest} />;\n  }\n}\n\nexport const Screen = Animated.createAnimatedComponent(NativeScreen);\n\nexport const ScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const NativeScreenContainer: React.ComponentType<ScreenContainerProps> = View;\n\nexport const ScreenStack: React.ComponentType<ScreenStackProps> = View;\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps> = View;\n\n// @ts-expect-error: search bar props have no common props with View\nexport const SearchBar: React.ComponentType<SearchBarProps> = View;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<React.PropsWithChildren<\n  ViewProps & { type?: HeaderSubviewTypes }\n>> = View;\n\nexport const shouldUseActivityState = true;\n"]},"metadata":{},"sourceType":"script"}
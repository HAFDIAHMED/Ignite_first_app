{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStores = exports.RootStoreProvider = void 0;\n\nvar _react = require(\"react\");\n\nvar RootStoreContext = (0, _react.createContext)({});\nvar RootStoreProvider = RootStoreContext.Provider;\nexports.RootStoreProvider = RootStoreProvider;\n\nvar useStores = function useStores() {\n  return (0, _react.useContext)(RootStoreContext);\n};\n\nexports.useStores = useStores;","map":{"version":3,"sources":["C:/Users/ahafdi/Desktop/react native/ignite/PizzaApp/app/models/root-store/root-store-context.ts"],"names":["RootStoreContext","RootStoreProvider","Provider","useStores"],"mappings":";;;;;AAAA;;AASA,IAAMA,gBAAgB,GAAG,0BAAyB,EAAzB,CAAzB;AAKO,IAAMC,iBAAiB,GAAGD,gBAAgB,CAACE,QAA3C;;;AAOA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAM,uBAAWH,gBAAX,CAAN;AAAA,CAAlB","sourcesContent":["import { createContext, useContext } from \"react\"\nimport { RootStore } from \"./root-store\"\n\n/**\n * Create a context we can use to\n * - Provide access to our stores from our root component\n * - Consume stores in our screens (or other components, though it's\n *   preferable to just connect screens)\n */\nconst RootStoreContext = createContext<RootStore>({} as RootStore)\n\n/**\n * The provider our root component will use to expose the root store\n */\nexport const RootStoreProvider = RootStoreContext.Provider\n\n/**\n * A hook that screens can use to gain access to our stores, with\n * `const { someStore, someOtherStore } = useStores()`,\n * or less likely: `const rootStore = useStores()`\n */\nexport const useStores = () => useContext(RootStoreContext)\n"]},"metadata":{},"sourceType":"script"}
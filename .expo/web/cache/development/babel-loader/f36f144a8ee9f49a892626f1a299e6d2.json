{"ast":null,"code":"var React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNative2 = require(\"@storybook/react-native\");\n\nvar _views = require(\"../../../storybook/views\");\n\nvar _theme = require(\"../../theme\");\n\nvar _text = require(\"./text\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ahafdi\\\\Desktop\\\\react native\\\\ignite\\\\PizzaApp\\\\app\\\\components\\\\text\\\\text.story.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar VIEWSTYLE = {\n  flex: 1,\n  backgroundColor: _theme.color.storybookDarkBg\n};\nvar viewStyleArray = [VIEWSTYLE, {\n  backgroundColor: \"#7fff00\"\n}];\n(0, _reactNative2.storiesOf)(\"Text\", module).addDecorator(function (fn) {\n  return React.createElement(_views.StoryScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 23\n    }\n  }, fn());\n}).add(\"Style Presets\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"default\",\n    usage: \"Used for normal body text.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Hello!\"), React.createElement(_text.Text, {\n    style: {\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Check out\", \"\\n\", \"my\", \"\\n\", \"line height\"), React.createElement(_text.Text, {\n    style: {\n      paddingTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"The quick brown fox jumped over the slow lazy dog.\"), React.createElement(_text.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"$123,456,789.00\"))), React.createElement(_views.UseCase, {\n    text: \"bold\",\n    usage: \"Used for bolded body text.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    preset: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Osnap! I'm puffy.\"))), React.createElement(_views.UseCase, {\n    text: \"header\",\n    usage: \"Used for major section headers.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    preset: \"header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Behold!\"))));\n}).add(\"Passing Content\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"text\",\n    usage: \"Used when you want to pass a value but don't want to open a child.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    text: \"Heyo!\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }))), React.createElement(_views.UseCase, {\n    text: \"tx\",\n    usage: \"Used for looking up i18n keys.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    tx: \"common.ok\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), React.createElement(_text.Text, {\n    tx: \"common.cancel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), React.createElement(_views.UseCase, {\n    text: \"children\",\n    usage: \"Used like you would normally use a React Native <Text> component.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Passing strings as children.\"))), React.createElement(_views.UseCase, {\n    text: \"nested children\",\n    usage: \"You can embed them and change styles too.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: VIEWSTYLE,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \" \", \"Hello \", React.createElement(_text.Text, {\n    preset: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }\n  }, \"bolded\"), \" World.\"))));\n}).add(\"Styling\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"Style array\",\n    usage: \"Text with style array\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: viewStyleArray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(_text.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \" \", \"Hello \", React.createElement(_text.Text, {\n    preset: \"bold\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, \"bolded\"), \" World.\"))));\n});","map":{"version":3,"sources":["C:/Users/ahafdi/Desktop/react native/ignite/PizzaApp/app/components/text/text.story.tsx"],"names":["VIEWSTYLE","flex","backgroundColor","color","storybookDarkBg","viewStyleArray","module","addDecorator","fn","add","paddingTop"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport * as React from \"react\"\nimport { View, ViewStyle } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { color } from \"../../theme\"\nimport { Text } from \"./text\"\n\ndeclare let module\n\nconst VIEWSTYLE = {\n  flex: 1,\n  backgroundColor: color.storybookDarkBg,\n}\nconst viewStyleArray: ViewStyle[] = [VIEWSTYLE, { backgroundColor: \"#7fff00\" }]\n\nstoriesOf(\"Text\", module)\n  .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Style Presets\", () => (\n    <Story>\n      <UseCase text=\"default\" usage=\"Used for normal body text.\">\n        <View style={VIEWSTYLE}>\n          <Text>Hello!</Text>\n          <Text style={{ paddingTop: 10 }}>\n            Check out{\"\\n\"}\n            my{\"\\n\"}\n            line height\n          </Text>\n          <Text style={{ paddingTop: 10 }}>The quick brown fox jumped over the slow lazy dog.</Text>\n          <Text>$123,456,789.00</Text>\n        </View>\n      </UseCase>\n      <UseCase text=\"bold\" usage=\"Used for bolded body text.\">\n        <View style={VIEWSTYLE}>\n          <Text preset=\"bold\">Osnap! I'm puffy.</Text>\n        </View>\n      </UseCase>\n      <UseCase text=\"header\" usage=\"Used for major section headers.\">\n        <View style={VIEWSTYLE}>\n          <Text preset=\"header\">Behold!</Text>\n        </View>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Passing Content\", () => (\n    <Story>\n      <UseCase\n        text=\"text\"\n        usage=\"Used when you want to pass a value but don't want to open a child.\"\n      >\n        <View style={VIEWSTYLE}>\n          <Text text=\"Heyo!\" />\n        </View>\n      </UseCase>\n      <UseCase text=\"tx\" usage=\"Used for looking up i18n keys.\">\n        <View style={VIEWSTYLE}>\n          <Text tx=\"common.ok\" />\n          <Text tx=\"common.cancel\" />\n        </View>\n      </UseCase>\n      <UseCase\n        text=\"children\"\n        usage=\"Used like you would normally use a React Native <Text> component.\"\n      >\n        <View style={VIEWSTYLE}>\n          <Text>Passing strings as children.</Text>\n        </View>\n      </UseCase>\n      <UseCase text=\"nested children\" usage=\"You can embed them and change styles too.\">\n        <View style={VIEWSTYLE}>\n          <Text>\n            {\" \"}\n            Hello <Text preset=\"bold\">bolded</Text> World.\n          </Text>\n        </View>\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"Style array\" usage=\"Text with style array\">\n        <View style={viewStyleArray}>\n          <Text>\n            {\" \"}\n            Hello <Text preset=\"bold\">bolded</Text> World.\n          </Text>\n        </View>\n      </UseCase>\n    </Story>\n  ))\n"]},"metadata":{},"sourceType":"script"}
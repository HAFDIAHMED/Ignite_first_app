{"ast":null,"code":"var React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNative2 = require(\"@storybook/react-native\");\n\nvar _views = require(\"../../../storybook/views\");\n\nvar _reactPowerplug = require(\"react-powerplug\");\n\nvar _switch = require(\"./switch\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ahafdi\\\\Desktop\\\\react native\\\\ignite\\\\PizzaApp\\\\app\\\\components\\\\switch\\\\switch.story.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar styleArray = [{\n  borderColor: \"#686868\"\n}];\nvar trackOffStyle = [{\n  backgroundColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar trackOnStyle = [{\n  backgroundColor: \"#b1008e\",\n  borderColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar thumbOffStyle = [{\n  backgroundColor: \"#b1008e\",\n  borderColor: \"#686868\"\n}, {\n  height: 80,\n  borderRadius: 0\n}];\nvar thumbOnStyle = [{\n  backgroundColor: \"#f0c\"\n}, {\n  height: 80,\n  borderRadius: 0,\n  borderColor: \"#686868\"\n}];\n(0, _reactNative2.storiesOf)(\"Switch\", module).addDecorator(function (fn) {\n  return React.createElement(_views.StoryScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }\n  }, fn());\n}).add(\"Behaviour\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"The Toggle Switch\",\n    usage: \"Use the switch to represent on/off states.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var on = _ref.on,\n        toggle = _ref.toggle;\n    return React.createElement(_switch.Switch, {\n      value: on,\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }\n    });\n  })), React.createElement(_views.UseCase, {\n    text: \"value = true\",\n    usage: \"This is permanently on.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, React.createElement(_switch.Switch, {\n    value: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), React.createElement(_views.UseCase, {\n    text: \"value = false\",\n    usage: \"This is permanantly off.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(_switch.Switch, {\n    value: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n}).add(\"Styling\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"Custom Styling\",\n    usage: \"Promise me this won't happen.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, function (_ref2) {\n    var on = _ref2.on,\n        toggle = _ref2.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, React.createElement(_switch.Switch, {\n      trackOnStyle: {\n        backgroundColor: \"green\",\n        borderColor: \"black\"\n      },\n      trackOffStyle: {\n        backgroundColor: \"red\",\n        borderColor: \"maroon\"\n      },\n      thumbOnStyle: {\n        backgroundColor: \"cyan\"\n      },\n      thumbOffStyle: {\n        backgroundColor: \"pink\"\n      },\n      value: on,\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }));\n  })), React.createElement(_views.UseCase, {\n    text: \"Style array\",\n    usage: \"This either.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactPowerplug.Toggle, {\n    initial: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, function (_ref3) {\n    var on = _ref3.on,\n        toggle = _ref3.toggle;\n    return React.createElement(_reactNative.View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, React.createElement(_switch.Switch, {\n      style: styleArray,\n      trackOffStyle: trackOffStyle,\n      trackOnStyle: trackOnStyle,\n      thumbOffStyle: thumbOffStyle,\n      thumbOnStyle: thumbOnStyle,\n      value: on,\n      onToggle: toggle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }));\n  })));\n});","map":{"version":3,"sources":["C:/Users/ahafdi/Desktop/react native/ignite/PizzaApp/app/components/switch/switch.story.tsx"],"names":["styleArray","borderColor","trackOffStyle","backgroundColor","height","borderRadius","trackOnStyle","thumbOffStyle","thumbOnStyle","module","addDecorator","fn","add","on","toggle"],"mappings":"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","sourcesContent":["/* eslint-disable react-native/no-inline-styles */\n/* eslint-disable react-native/no-color-literals */\n\nimport * as React from \"react\"\nimport { View, ViewStyle } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Toggle } from \"react-powerplug\"\nimport { Switch } from \"./switch\"\n\ndeclare let module\n\nconst styleArray: ViewStyle[] = [{ borderColor: \"#686868\" }]\n\nconst trackOffStyle: ViewStyle[] = [\n  { backgroundColor: \"#686868\" },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst trackOnStyle: ViewStyle[] = [\n  {\n    backgroundColor: \"#b1008e\",\n    borderColor: \"#686868\",\n  },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst thumbOffStyle: ViewStyle[] = [\n  {\n    backgroundColor: \"#b1008e\",\n    borderColor: \"#686868\",\n  },\n  {\n    height: 80,\n    borderRadius: 0,\n  },\n]\nconst thumbOnStyle: ViewStyle[] = [\n  { backgroundColor: \"#f0c\" },\n  {\n    height: 80,\n    borderRadius: 0,\n    borderColor: \"#686868\",\n  },\n]\n\nstoriesOf(\"Switch\", module)\n  .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Behaviour\", () => (\n    <Story>\n      <UseCase text=\"The Toggle Switch\" usage=\"Use the switch to represent on/off states.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => <Switch value={on} onToggle={toggle} />}\n        </Toggle>\n      </UseCase>\n      <UseCase text=\"value = true\" usage=\"This is permanently on.\">\n        <Switch value={true} />\n      </UseCase>\n      <UseCase text=\"value = false\" usage=\"This is permanantly off.\">\n        <Switch value={false} />\n      </UseCase>\n    </Story>\n  ))\n  .add(\"Styling\", () => (\n    <Story>\n      <UseCase text=\"Custom Styling\" usage=\"Promise me this won't happen.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Switch\n                trackOnStyle={{ backgroundColor: \"green\", borderColor: \"black\" }}\n                trackOffStyle={{ backgroundColor: \"red\", borderColor: \"maroon\" }}\n                thumbOnStyle={{ backgroundColor: \"cyan\" }}\n                thumbOffStyle={{ backgroundColor: \"pink\" }}\n                value={on}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n\n      <UseCase text=\"Style array\" usage=\"This either.\">\n        <Toggle initial={false}>\n          {({ on, toggle }) => (\n            <View>\n              <Switch\n                style={styleArray}\n                trackOffStyle={trackOffStyle}\n                trackOnStyle={trackOnStyle}\n                thumbOffStyle={thumbOffStyle}\n                thumbOnStyle={thumbOnStyle}\n                // trackOnStyle={{ backgroundColor: \"green\", borderColor: \"black\" }}\n                // trackOffStyle={{ backgroundColor: \"red\", borderColor: \"maroon\" }}\n                // thumbOnStyle={{ backgroundColor: \"cyan\" }}\n                // thumbOffStyle={{ backgroundColor: \"pink\" }}\n\n                value={on}\n                onToggle={toggle}\n              />\n            </View>\n          )}\n        </Toggle>\n      </UseCase>\n    </Story>\n  ))\n"]},"metadata":{},"sourceType":"script"}
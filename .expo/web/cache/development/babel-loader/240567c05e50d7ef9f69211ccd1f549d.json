{"ast":null,"code":"var React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNative2 = require(\"@storybook/react-native\");\n\nvar _views = require(\"../../../storybook/views\");\n\nvar _button = require(\"./button\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ahafdi\\\\Desktop\\\\react native\\\\ignite\\\\PizzaApp\\\\app\\\\components\\\\button\\\\button.story.tsx\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar buttonStyleArray = [{\n  paddingVertical: 100\n}, {\n  borderRadius: 0\n}];\nvar buttonTextStyleArray = [{\n  fontSize: 20\n}, {\n  color: \"#a511dc\"\n}];\n(0, _reactNative2.storiesOf)(\"Button\", module).addDecorator(function (fn) {\n  return React.createElement(_views.StoryScreen, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }\n  }, fn());\n}).add(\"Style Presets\", function () {\n  return React.createElement(_views.Story, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(_views.UseCase, {\n    text: \"Primary\",\n    usage: \"The primary button.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(_button.Button, {\n    text: \"Click It\",\n    preset: \"primary\",\n    onPress: function onPress() {\n      return _reactNative.Alert.alert(\"pressed\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), React.createElement(_views.UseCase, {\n    text: \"Disabled\",\n    usage: \"The disabled behaviour of the primary button.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(_button.Button, {\n    text: \"Click It\",\n    preset: \"primary\",\n    onPress: function onPress() {\n      return _reactNative.Alert.alert(\"pressed\");\n    },\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), React.createElement(_views.UseCase, {\n    text: \"Array Style\",\n    usage: \"Button with array style\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(_button.Button, {\n    text: \"Click It\",\n    preset: \"primary\",\n    onPress: function onPress() {\n      return _reactNative.Alert.alert(\"pressed\");\n    },\n    style: buttonStyleArray,\n    textStyle: buttonTextStyleArray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["C:/Users/ahafdi/Desktop/react native/ignite/PizzaApp/app/components/button/button.story.tsx"],"names":["buttonStyleArray","paddingVertical","borderRadius","buttonTextStyleArray","fontSize","color","module","addDecorator","fn","add","Alert","alert"],"mappings":"AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;AAIA,IAAMA,gBAA6B,GAAG,CAAC;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAD,EAA2B;AAAEC,EAAAA,YAAY,EAAE;AAAhB,CAA3B,CAAtC;AAEA,IAAMC,oBAAiC,GAAG,CAAC;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAD,EAAmB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAnB,CAA1C;AAEA,6BAAU,QAAV,EAAoBC,MAApB,EACGC,YADH,CACgB,UAAAC,EAAE;AAAA,SAAI,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcA,EAAE,EAAhB,CAAJ;AAAA,CADlB,EAEGC,GAFH,CAEO,eAFP,EAEwB;AAAA,SACpB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAS,IAAA,IAAI,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAC,qBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,MAAM,EAAC,SAA/B;AAAyC,IAAA,OAAO,EAAE;AAAA,aAAMC,mBAAMC,KAAN,CAAY,SAAZ,CAAN;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,cAAD;AAAS,IAAA,IAAI,EAAC,UAAd;AAAyB,IAAA,KAAK,EAAC,+CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,MAAM,EAAC,SAA/B;AAAyC,IAAA,OAAO,EAAE;AAAA,aAAMD,mBAAMC,KAAN,CAAY,SAAZ,CAAN;AAAA,KAAlD;AAAgF,IAAA,QAAQ,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,EAOE,oBAAC,cAAD;AAAS,IAAA,IAAI,EAAC,aAAd;AAA4B,IAAA,KAAK,EAAC,yBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,MAAM,EAAC,SAFT;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMD,mBAAMC,KAAN,CAAY,SAAZ,CAAN;AAAA,KAHX;AAIE,IAAA,KAAK,EAAEX,gBAJT;AAKE,IAAA,SAAS,EAAEG,oBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADoB;AAAA,CAFxB","sourcesContent":["import * as React from \"react\"\nimport { ViewStyle, TextStyle, Alert } from \"react-native\"\nimport { storiesOf } from \"@storybook/react-native\"\nimport { StoryScreen, Story, UseCase } from \"../../../storybook/views\"\nimport { Button } from \"./button\"\n\ndeclare let module\n\nconst buttonStyleArray: ViewStyle[] = [{ paddingVertical: 100 }, { borderRadius: 0 }]\n\nconst buttonTextStyleArray: TextStyle[] = [{ fontSize: 20 }, { color: \"#a511dc\" }]\n\nstoriesOf(\"Button\", module)\n  .addDecorator(fn => <StoryScreen>{fn()}</StoryScreen>)\n  .add(\"Style Presets\", () => (\n    <Story>\n      <UseCase text=\"Primary\" usage=\"The primary button.\">\n        <Button text=\"Click It\" preset=\"primary\" onPress={() => Alert.alert(\"pressed\")} />\n      </UseCase>\n      <UseCase text=\"Disabled\" usage=\"The disabled behaviour of the primary button.\">\n        <Button text=\"Click It\" preset=\"primary\" onPress={() => Alert.alert(\"pressed\")} disabled />\n      </UseCase>\n      <UseCase text=\"Array Style\" usage=\"Button with array style\">\n        <Button\n          text=\"Click It\"\n          preset=\"primary\"\n          onPress={() => Alert.alert(\"pressed\")}\n          style={buttonStyleArray}\n          textStyle={buttonTextStyleArray}\n        />\n      </UseCase>\n    </Story>\n  ))\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Header = Header;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _button = require(\"../button/button\");\n\nvar _text = require(\"../text/text\");\n\nvar _icon = require(\"../icon/icon\");\n\nvar _theme = require(\"../../theme\");\n\nvar _i18n = require(\"../../i18n/\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\ahafdi\\\\Desktop\\\\react native\\\\ignite\\\\PizzaApp\\\\app\\\\components\\\\header\\\\header.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar ROOT = {\n  flexDirection: \"row\",\n  paddingHorizontal: _theme.spacing[4],\n  alignItems: \"center\",\n  paddingTop: _theme.spacing[5],\n  paddingBottom: _theme.spacing[5],\n  justifyContent: \"flex-start\"\n};\nvar TITLE = {\n  textAlign: \"center\"\n};\nvar TITLE_MIDDLE = {\n  flex: 1,\n  justifyContent: \"center\"\n};\nvar LEFT = {\n  width: 32\n};\nvar RIGHT = {\n  width: 32\n};\n\nfunction Header(props) {\n  var onLeftPress = props.onLeftPress,\n      onRightPress = props.onRightPress,\n      rightIcon = props.rightIcon,\n      leftIcon = props.leftIcon,\n      headerText = props.headerText,\n      headerTx = props.headerTx,\n      style = props.style,\n      titleStyle = props.titleStyle;\n  var header = headerText || headerTx && (0, _i18n.translate)(headerTx) || \"\";\n  return _react.default.createElement(_reactNative.View, {\n    style: _objectSpread(_objectSpread({}, ROOT), style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, leftIcon ? _react.default.createElement(_button.Button, {\n    preset: \"link\",\n    onPress: onLeftPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_icon.Icon, {\n    icon: leftIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })) : _react.default.createElement(_reactNative.View, {\n    style: LEFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: TITLE_MIDDLE,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_text.Text, {\n    style: _objectSpread(_objectSpread({}, TITLE), titleStyle),\n    text: header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), rightIcon ? _react.default.createElement(_button.Button, {\n    preset: \"link\",\n    onPress: onRightPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_icon.Icon, {\n    icon: rightIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })) : _react.default.createElement(_reactNative.View, {\n    style: RIGHT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/ahafdi/Desktop/react native/ignite/PizzaApp/app/components/header/header.tsx"],"names":["ROOT","flexDirection","paddingHorizontal","spacing","alignItems","paddingTop","paddingBottom","justifyContent","TITLE","textAlign","TITLE_MIDDLE","flex","LEFT","width","RIGHT","Header","props","onLeftPress","onRightPress","rightIcon","leftIcon","headerText","headerTx","style","titleStyle","header"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAGA,IAAMA,IAAe,GAAG;AACtBC,EAAAA,aAAa,EAAE,KADO;AAEtBC,EAAAA,iBAAiB,EAAEC,eAAQ,CAAR,CAFG;AAGtBC,EAAAA,UAAU,EAAE,QAHU;AAItBC,EAAAA,UAAU,EAAEF,eAAQ,CAAR,CAJU;AAKtBG,EAAAA,aAAa,EAAEH,eAAQ,CAAR,CALO;AAMtBI,EAAAA,cAAc,EAAE;AANM,CAAxB;AAQA,IAAMC,KAAgB,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAzB;AACA,IAAMC,YAAuB,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWJ,EAAAA,cAAc,EAAE;AAA3B,CAAhC;AACA,IAAMK,IAAe,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAxB;AACA,IAAMC,KAAgB,GAAG;AAAED,EAAAA,KAAK,EAAE;AAAT,CAAzB;;AAKO,SAASE,MAAT,CAAgBC,KAAhB,EAAoC;AACzC,MACEC,WADF,GASID,KATJ,CACEC,WADF;AAAA,MAEEC,YAFF,GASIF,KATJ,CAEEE,YAFF;AAAA,MAGEC,SAHF,GASIH,KATJ,CAGEG,SAHF;AAAA,MAIEC,QAJF,GASIJ,KATJ,CAIEI,QAJF;AAAA,MAKEC,UALF,GASIL,KATJ,CAKEK,UALF;AAAA,MAMEC,QANF,GASIN,KATJ,CAMEM,QANF;AAAA,MAOEC,KAPF,GASIP,KATJ,CAOEO,KAPF;AAAA,MAQEC,UARF,GASIR,KATJ,CAQEQ,UARF;AAUA,MAAMC,MAAM,GAAGJ,UAAU,IAAKC,QAAQ,IAAI,qBAAUA,QAAV,CAA3B,IAAmD,EAAlE;AAEA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,kCAAOtB,IAAP,GAAgBuB,KAAhB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QAAQ,GACP,6BAAC,cAAD;AAAQ,IAAA,MAAM,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAEH,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,UAAD;AAAM,IAAA,IAAI,EAAEG,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADO,GAKP,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAER,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAQE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEF,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,UAAD;AAAM,IAAA,KAAK,kCAAOF,KAAP,GAAiBgB,UAAjB,CAAX;AAA0C,IAAA,IAAI,EAAEC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,EAWGN,SAAS,GACR,6BAAC,cAAD;AAAQ,IAAA,MAAM,EAAC,MAAf;AAAsB,IAAA,OAAO,EAAED,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,UAAD;AAAM,IAAA,IAAI,EAAEC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAKR,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEL,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,CADF;AAqBD","sourcesContent":["import React from \"react\"\nimport { View, ViewStyle, TextStyle } from \"react-native\"\nimport { HeaderProps } from \"./header.props\"\nimport { Button } from \"../button/button\"\nimport { Text } from \"../text/text\"\nimport { Icon } from \"../icon/icon\"\nimport { spacing } from \"../../theme\"\nimport { translate } from \"../../i18n/\"\n\n// static styles\nconst ROOT: ViewStyle = {\n  flexDirection: \"row\",\n  paddingHorizontal: spacing[4],\n  alignItems: \"center\",\n  paddingTop: spacing[5],\n  paddingBottom: spacing[5],\n  justifyContent: \"flex-start\",\n}\nconst TITLE: TextStyle = { textAlign: \"center\" }\nconst TITLE_MIDDLE: ViewStyle = { flex: 1, justifyContent: \"center\" }\nconst LEFT: ViewStyle = { width: 32 }\nconst RIGHT: ViewStyle = { width: 32 }\n\n/**\n * Header that appears on many screens. Will hold navigation buttons and screen title.\n */\nexport function Header(props: HeaderProps) {\n  const {\n    onLeftPress,\n    onRightPress,\n    rightIcon,\n    leftIcon,\n    headerText,\n    headerTx,\n    style,\n    titleStyle,\n  } = props\n  const header = headerText || (headerTx && translate(headerTx)) || \"\"\n\n  return (\n    <View style={{ ...ROOT, ...style }}>\n      {leftIcon ? (\n        <Button preset=\"link\" onPress={onLeftPress}>\n          <Icon icon={leftIcon} />\n        </Button>\n      ) : (\n        <View style={LEFT} />\n      )}\n      <View style={TITLE_MIDDLE}>\n        <Text style={{ ...TITLE, ...titleStyle }} text={header} />\n      </View>\n      {rightIcon ? (\n        <Button preset=\"link\" onPress={onRightPress}>\n          <Icon icon={rightIcon} />\n        </Button>\n      ) : (\n        <View style={RIGHT} />\n      )}\n    </View>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}
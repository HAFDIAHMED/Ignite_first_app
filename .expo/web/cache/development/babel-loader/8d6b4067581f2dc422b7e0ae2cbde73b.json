{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Text = Text;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _text = require(\"./text.presets\");\n\nvar _i18n = require(\"../../i18n\");\n\nvar _ramda = require(\"ramda\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\ahafdi\\\\Desktop\\\\react native\\\\ignite\\\\PizzaApp\\\\app\\\\components\\\\text\\\\text.tsx\";\nvar _excluded = [\"preset\", \"tx\", \"txOptions\", \"text\", \"children\", \"style\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction Text(props) {\n  var _props$preset = props.preset,\n      preset = _props$preset === void 0 ? \"default\" : _props$preset,\n      tx = props.tx,\n      txOptions = props.txOptions,\n      text = props.text,\n      children = props.children,\n      styleOverride = props.style,\n      rest = (0, _objectWithoutProperties2.default)(props, _excluded);\n  var i18nText = tx && (0, _i18n.translate)(tx, txOptions);\n  var content = i18nText || text || children;\n  var style = (0, _ramda.mergeAll)((0, _ramda.flatten)([_text.presets[preset] || _text.presets.default, styleOverride]));\n  return React.createElement(_reactNative.Text, (0, _extends2.default)({}, rest, {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), content);\n}","map":{"version":3,"sources":["C:/Users/ahafdi/Desktop/react native/ignite/PizzaApp/app/components/text/text.tsx"],"names":["Text","props","preset","tx","txOptions","text","children","styleOverride","style","rest","i18nText","content","presets","default"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;AAOO,SAASA,IAAT,CAAcC,KAAd,EAAgC;AAErC,sBAA6FA,KAA7F,CAAQC,MAAR;AAAA,MAAQA,MAAR,8BAAiB,SAAjB;AAAA,MAA4BC,EAA5B,GAA6FF,KAA7F,CAA4BE,EAA5B;AAAA,MAAgCC,SAAhC,GAA6FH,KAA7F,CAAgCG,SAAhC;AAAA,MAA2CC,IAA3C,GAA6FJ,KAA7F,CAA2CI,IAA3C;AAAA,MAAiDC,QAAjD,GAA6FL,KAA7F,CAAiDK,QAAjD;AAAA,MAAkEC,aAAlE,GAA6FN,KAA7F,CAA2DO,KAA3D;AAAA,MAAoFC,IAApF,0CAA6FR,KAA7F;AAGA,MAAMS,QAAQ,GAAGP,EAAE,IAAI,qBAAUA,EAAV,EAAcC,SAAd,CAAvB;AACA,MAAMO,OAAO,GAAGD,QAAQ,IAAIL,IAAZ,IAAoBC,QAApC;AAEA,MAAME,KAAK,GAAG,qBAAS,oBAAQ,CAACI,cAAQV,MAAR,KAAmBU,cAAQC,OAA5B,EAAqCN,aAArC,CAAR,CAAT,CAAd;AAEA,SACE,oBAAC,iBAAD,6BAAqBE,IAArB;AAA2B,IAAA,KAAK,EAAED,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGG,OADH,CADF;AAKD","sourcesContent":["import * as React from \"react\"\nimport { Text as ReactNativeText } from \"react-native\"\nimport { presets } from \"./text.presets\"\nimport { TextProps } from \"./text.props\"\nimport { translate } from \"../../i18n\"\nimport { mergeAll, flatten } from \"ramda\"\n\n/**\n * For your text displaying needs.\n *\n * This component is a HOC over the built-in React Native one.\n */\nexport function Text(props: TextProps) {\n  // grab the props\n  const { preset = \"default\", tx, txOptions, text, children, style: styleOverride, ...rest } = props\n\n  // figure out which content to use\n  const i18nText = tx && translate(tx, txOptions)\n  const content = i18nText || text || children\n\n  const style = mergeAll(flatten([presets[preset] || presets.default, styleOverride]))\n\n  return (\n    <ReactNativeText {...rest} style={style}>\n      {content}\n    </ReactNativeText>\n  )\n}\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _reactNative = require(\"react-native\");\n\nvar _browser = require(\"./environment/browser\");\n\nvar Platform = {\n  OS: _reactNative.Platform.OS,\n  select: _reactNative.Platform.select,\n  isDOMAvailable: _browser.isDOMAvailable,\n  canUseEventListeners: _browser.canUseEventListeners,\n  canUseViewport: _browser.canUseViewport\n};\nvar _default = Platform;\nexports.default = _default;","map":{"version":3,"sources":["../src/Platform.ts"],"names":[],"mappings":";;;;;AAAA;;AAEA;;AAMA,IAAM,QAAQ,GAAG;AAKf,EAAA,EAAE,EAAE,sBAAoB,EALT;AAcf,EAAA,MAAM,EAAE,sBAAoB,MAdb;AAmBf,EAAA,cAAc,EAAd,uBAnBe;AAyBf,EAAA,oBAAoB,EAApB,6BAzBe;AA+Bf,EAAA,cAAc,EAAd;AA/Be,CAAjB;eAkCe,Q","sourcesContent":["import { Platform as ReactNativePlatform, PlatformOSType } from 'react-native';\n\nimport { isDOMAvailable, canUseEventListeners, canUseViewport } from './environment/browser';\n\nexport type PlatformSelectOSType = PlatformOSType | 'native' | 'electron' | 'default';\n\nexport type PlatformSelect = <T>(specifics: { [platform in PlatformSelectOSType]?: T }) => T;\n\nconst Platform = {\n  /**\n   * Denotes the currently running platform.\n   * Can be one of ios, android, web.\n   */\n  OS: ReactNativePlatform.OS,\n  /**\n   * Returns the value with the matching platform.\n   * Object keys can be any of ios, android, native, web, default.\n   *\n   * @ios ios, native, default\n   * @android android, native, default\n   * @web web, default\n   */\n  select: ReactNativePlatform.select as PlatformSelect,\n  /**\n   * Denotes if the DOM API is available in the current environment.\n   * The DOM is not available in native React runtimes and Node.js.\n   */\n  isDOMAvailable,\n  /**\n   * Denotes if the current environment can attach event listeners\n   * to the window. This will return false in native React\n   * runtimes and Node.js.\n   */\n  canUseEventListeners,\n  /**\n   * Denotes if the current environment can inspect properties of the\n   * screen on which the current window is being rendered. This will\n   * return false in native React runtimes and Node.js.\n   */\n  canUseViewport,\n};\n\nexport default Platform;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}